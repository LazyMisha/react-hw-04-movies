{"version":3,"sources":["key.js","api/movies.js","components/HomePage/index.jsx"],"names":["themoviedb_api","axios","defaults","baseURL","fetchTrendingMovies","then","response","data","results","fetchMovieDetails","id","fetchMovieCast","cast","fetchMovieReviews","fetchMoviesWithQuery","searchQuery","HomePage","useState","movies","setMovies","isLoading","setIsLoading","useEffect","catch","error","console","log","finally","map","movie","key","to","pathname","state","referenced","search","title"],"mappings":"8TAEeA,EAFQ,mCCGvBC,IAAMC,SAASC,QAAU,+BAElB,IAAMC,EAAsB,WACjC,OAAOH,IAAM,+BAAD,OAAgCD,IAAkBK,MAC5D,SAACC,GAAD,OAAcA,EAASC,KAAKC,YAInBC,EAAoB,SAACC,GAChC,OAAOT,IAAM,UAAD,OAAWS,EAAX,oBAAyBV,IAAkBK,MACrD,SAACC,GAAD,OAAcA,EAASC,SAIdI,EAAiB,SAACD,GAC7B,OAAOT,IAAM,UAAD,OAAWS,EAAX,4BAAiCV,IAAkBK,MAC7D,SAACC,GAAD,OAAcA,EAASC,KAAKK,SAInBC,EAAoB,SAACH,GAChC,OAAOT,IAAM,UAAD,OACAS,EADA,4BACsBV,EADtB,2BAEVK,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKC,YAGxBM,EAAuB,SAACC,GACnC,OAAOd,IAAM,yBAAD,OACeD,EADf,kBACuCe,IACjDV,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKC,a,kFCStBQ,UArCE,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACdC,EADc,KACNC,EADM,OAEaF,oBAAS,GAFtB,mBAEdG,EAFc,KAEHC,EAFG,KAcrB,OAVAC,qBAAU,WACRD,GAAa,GACbjB,cACGC,MAAK,SAACE,GACLY,EAAUZ,MAEXgB,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,MAC7BG,QAAQN,GAAa,MACvB,IAGD,oCACE,8CACED,EAeE,KAdF,4BACGF,EAAOU,KAAI,SAACC,GAAD,OACV,wBAAIC,IAAKD,EAAMnB,IACb,kBAAC,IAAD,CACEqB,GAAI,CACFC,SAAS,WAAD,OAAaH,EAAMnB,IAC3BuB,MAAO,CAAEC,WAAY,IAAKC,OAAQ,MAGnCN,EAAMO","file":"static/js/7.cc1b1ae2.chunk.js","sourcesContent":["const themoviedb_api = \"125ddfc701b4749aecfdf17596fae6a4\";\r\n\r\nexport default themoviedb_api;\r\n","import axios from \"axios\";\r\nimport themoviedb_api from \"../key\";\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\r\n\r\nexport const fetchTrendingMovies = () => {\r\n  return axios(`/trending/movie/day?api_key=${themoviedb_api}`).then(\r\n    (response) => response.data.results\r\n  );\r\n};\r\n\r\nexport const fetchMovieDetails = (id) => {\r\n  return axios(`/movie/${id}?api_key=${themoviedb_api}`).then(\r\n    (response) => response.data\r\n  );\r\n};\r\n\r\nexport const fetchMovieCast = (id) => {\r\n  return axios(`/movie/${id}/credits?api_key=${themoviedb_api}`).then(\r\n    (response) => response.data.cast\r\n  );\r\n};\r\n\r\nexport const fetchMovieReviews = (id) => {\r\n  return axios(\r\n    `/movie/${id}/reviews?api_key=${themoviedb_api}&language=en-US&page=1`\r\n  ).then((response) => response.data.results);\r\n};\r\n\r\nexport const fetchMoviesWithQuery = (searchQuery) => {\r\n  return axios(\r\n    `/search/movie?api_key=${themoviedb_api}&query=${searchQuery}`\r\n  ).then((response) => response.data.results);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NavLink as Link } from \"react-router-dom\";\r\nimport { fetchTrendingMovies } from \"../../api/movies\";\r\n\r\nconst HomePage = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetchTrendingMovies()\r\n      .then((data) => {\r\n        setMovies(data);\r\n      })\r\n      .catch((error) => console.log(error))\r\n      .finally(setIsLoading(false));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>Trending today</h1>\r\n      {!isLoading ? (\r\n        <ul>\r\n          {movies.map((movie) => (\r\n            <li key={movie.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/movies/${movie.id}`,\r\n                  state: { referenced: \"/\", search: \"\" },\r\n                }}\r\n              >\r\n                {movie.title}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"sourceRoot":""}