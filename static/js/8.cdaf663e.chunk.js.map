{"version":3,"sources":["components/Reviews/index.jsx"],"names":["Reviews","props","useState","reviews","setReviews","id","match","params","useEffect","fetchMovieReviews","then","catch","error","console","log","length","map","review","key","author","content"],"mappings":"0KAiCeA,UA9BC,SAACC,GAAW,IAAD,EACKC,mBAAS,IADd,mBAClBC,EADkB,KACTC,EADS,KAEjBC,EAAOJ,EAAMK,MAAMC,OAAnBF,GAUR,OARAG,qBAAU,WACRC,YAAkBJ,GACfK,MAAK,SAACP,GACLC,EAAWD,MAEZQ,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC/B,CAACP,IAGF,oCACGF,GAAWA,EAAQY,OAAS,EAC3B,4BACGZ,EAAQa,KAAI,SAACC,GAAD,OACX,wBAAIC,IAAKD,EAAOE,QACd,8CAAgBF,EAAOE,SACvB,2BAAIF,EAAOG,cAKjB","file":"static/js/8.cdaf663e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { fetchMovieReviews } from \"../../api/movies\";\r\n\r\nconst Reviews = (props) => {\r\n  const [reviews, setReviews] = useState([]);\r\n  const { id } = props.match.params;\r\n\r\n  useEffect(() => {\r\n    fetchMovieReviews(id)\r\n      .then((reviews) => {\r\n        setReviews(reviews);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      {reviews && reviews.length > 0 ? (\r\n        <ul>\r\n          {reviews.map((review) => (\r\n            <li key={review.author}>\r\n              <h4>{`Author: ${review.author}`}</h4>\r\n              <p>{review.content}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>Sorry, we don't have any reviews for this movie.</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n"],"sourceRoot":""}