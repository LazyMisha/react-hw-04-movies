{"version":3,"sources":["key.js","api/movies.js","components/MovieDetailsPage/styles.module.scss","components/MovieDetailsPage/index.jsx"],"names":["themoviedb_api","axios","defaults","baseURL","fetchTrendingMovies","then","response","data","results","fetchMovieDetails","id","fetchMovieCast","cast","fetchMovieReviews","fetchMoviesWithQuery","searchQuery","module","exports","Reviews","lazy","Cast","MovieDetailsPage","props","history","useHistory","location","useLocation","useState","movie","setMovie","isLoading","setIsLoading","match","params","url","useEffect","catch","error","console","log","finally","backdrop_path","title","original_title","popularity","overview","genres","className","styles","button","onClick","ref","state","referenced","search","push","pathname","content","image","src","alt","info","map","genre","style","paddingRight","key","name","additional_information","to","path","component"],"mappings":"8TAEeA,EAFQ,mCCGvBC,IAAMC,SAASC,QAAU,+BAElB,IAAMC,EAAsB,WACjC,OAAOH,IAAM,+BAAD,OAAgCD,IAAkBK,MAC5D,SAACC,GAAD,OAAcA,EAASC,KAAKC,YAInBC,EAAoB,SAACC,GAChC,OAAOT,IAAM,UAAD,OAAWS,EAAX,oBAAyBV,IAAkBK,MACrD,SAACC,GAAD,OAAcA,EAASC,SAIdI,EAAiB,SAACD,GAC7B,OAAOT,IAAM,UAAD,OAAWS,EAAX,4BAAiCV,IAAkBK,MAC7D,SAACC,GAAD,OAAcA,EAASC,KAAKK,SAInBC,EAAoB,SAACH,GAChC,OAAOT,IAAM,UAAD,OACAS,EADA,4BACsBV,EADtB,2BAEVK,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKC,YAGxBM,EAAuB,SAACC,GACnC,OAAOd,IAAM,yBAAD,OACeD,EADf,kBACuCe,IACjDV,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKC,a,mBC/BrCQ,EAAOC,QAAU,CAAC,QAAU,wBAAwB,OAAS,uBAAuB,MAAQ,sBAAsB,KAAO,qBAAqB,uBAAyB,yC,0GCQjKC,EAAUC,gBAAK,kBAAM,gCACrBC,EAAOD,gBAAK,kBAAM,gCA2FTE,UAzFU,SAACC,GACxB,IAAMC,EAAUC,cACVC,EAAWC,cAFiB,EAGRC,mBAAS,IAHD,mBAG3BC,EAH2B,KAGpBC,EAHoB,OAIAF,oBAAS,GAJT,mBAI3BG,EAJ2B,KAIhBC,EAJgB,KAK1BrB,EAAOY,EAAMU,MAAMC,OAAnBvB,GACAwB,EAAQZ,EAAMU,MAAdE,IAWRC,qBAAU,WACRJ,GAAa,GACbtB,YAAkBC,GACfL,MAAK,SAACuB,GACLC,EAASD,MAEVQ,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,MAC7BG,QAAQT,GAAa,MACvB,CAACrB,IAzB8B,IA4BhC+B,EAKEb,EALFa,cACgBC,EAIdd,EAJFe,eACAC,EAGEhB,EAHFgB,WACAC,EAEEjB,EAFFiB,SACAC,EACElB,EADFkB,OAGF,OACE,qCACIhB,GAAagB,EACb,oCACE,yBAAKC,UAAWC,IAAOC,QACrB,4BAAQC,QAhCU,WAC1B,IAAMC,EAAM1B,GAAYA,EAAS2B,MAAQ3B,EAAS2B,MAAMC,WAAa,IAC/DC,EAAS7B,GAAYA,EAAS2B,MAAQ3B,EAAS2B,MAAME,OAAS,GACpE/B,EAAQgC,KAAK,CACXC,SAAUL,EACVG,OAAQA,MA2BF,mBAEF,yBAAKP,UAAWC,IAAOS,SACrB,yBAAKV,UAAWC,IAAOU,OACrB,yBACEC,IAAG,6CAAwClB,GAC3CmB,IAAKlB,KAGT,yBAAKK,UAAWC,IAAOa,MACrB,4BAAKnB,GACL,0CAAgBE,GAChB,wCACA,2BAAIC,GACJ,sCACCC,EAAOgB,KAAI,SAACC,GAAD,OACV,0BAAMC,MAAO,CAAEC,aAAc,IAAMC,IAAKH,EAAMrD,IAC3CqD,EAAMI,WAKf,yBAAKpB,UAAWC,IAAOoB,wBACrB,qDACA,4BACE,4BACE,kBAAC,IAAD,CAAMC,GAAI,CAAEb,SAAS,GAAD,OAAKtB,EAAL,SAAiBkB,MAAO3B,EAAS2B,QAArD,SAIF,4BACE,kBAAC,IAAD,CACEiB,GAAI,CAAEb,SAAS,GAAD,OAAKtB,EAAL,YAAoBkB,MAAO3B,EAAS2B,QADpD,cAQN,kBAAC,IAAD,CAAOkB,KAAK,mBAAmBC,UAAWnD,IAC1C,kBAAC,IAAD,CAAOkD,KAAK,sBAAsBC,UAAWrD,KAG/C","file":"static/js/5.6dc3dfeb.chunk.js","sourcesContent":["const themoviedb_api = \"125ddfc701b4749aecfdf17596fae6a4\";\r\n\r\nexport default themoviedb_api;\r\n","import axios from \"axios\";\r\nimport themoviedb_api from \"../key\";\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\r\n\r\nexport const fetchTrendingMovies = () => {\r\n  return axios(`/trending/movie/day?api_key=${themoviedb_api}`).then(\r\n    (response) => response.data.results\r\n  );\r\n};\r\n\r\nexport const fetchMovieDetails = (id) => {\r\n  return axios(`/movie/${id}?api_key=${themoviedb_api}`).then(\r\n    (response) => response.data\r\n  );\r\n};\r\n\r\nexport const fetchMovieCast = (id) => {\r\n  return axios(`/movie/${id}/credits?api_key=${themoviedb_api}`).then(\r\n    (response) => response.data.cast\r\n  );\r\n};\r\n\r\nexport const fetchMovieReviews = (id) => {\r\n  return axios(\r\n    `/movie/${id}/reviews?api_key=${themoviedb_api}&language=en-US&page=1`\r\n  ).then((response) => response.data.results);\r\n};\r\n\r\nexport const fetchMoviesWithQuery = (searchQuery) => {\r\n  return axios(\r\n    `/search/movie?api_key=${themoviedb_api}&query=${searchQuery}`\r\n  ).then((response) => response.data.results);\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"styles_content__2ey18\",\"button\":\"styles_button__ObyhM\",\"image\":\"styles_image__1qLcj\",\"info\":\"styles_info__LPm7U\",\"additional_information\":\"styles_additional_information__3DNhW\"};","import React, { useState, useEffect, lazy } from \"react\";\r\nimport {\r\n  NavLink as Link,\r\n  Route,\r\n  useHistory,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport { fetchMovieDetails } from \"../../api/movies\";\r\nimport styles from \"./styles.module.scss\";\r\nconst Reviews = lazy(() => import(\"../Reviews\"));\r\nconst Cast = lazy(() => import(\"../Cast\"));\r\n\r\nconst MovieDetailsPage = (props) => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [movie, setMovie] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { id } = props.match.params;\r\n  const { url } = props.match;\r\n\r\n  const handleClickOnGoBack = () => {\r\n    const ref = location && location.state ? location.state.referenced : \"/\";\r\n    const search = location && location.state ? location.state.search : \"\";\r\n    history.push({\r\n      pathname: ref,\r\n      search: search,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetchMovieDetails(id)\r\n      .then((movie) => {\r\n        setMovie(movie);\r\n      })\r\n      .catch((error) => console.log(error))\r\n      .finally(setIsLoading(false));\r\n  }, [id]);\r\n\r\n  const {\r\n    backdrop_path,\r\n    original_title: title,\r\n    popularity,\r\n    overview,\r\n    genres,\r\n  } = movie;\r\n\r\n  return (\r\n    <>\r\n      {!isLoading && genres ? (\r\n        <>\r\n          <div className={styles.button}>\r\n            <button onClick={handleClickOnGoBack}>&#x2190; Go back</button>\r\n          </div>\r\n          <div className={styles.content}>\r\n            <div className={styles.image}>\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/original${backdrop_path}`}\r\n                alt={title}\r\n              />\r\n            </div>\r\n            <div className={styles.info}>\r\n              <h2>{title}</h2>\r\n              <p>User Score: {popularity}</p>\r\n              <h3>Overview</h3>\r\n              <p>{overview}</p>\r\n              <h3>Genres</h3>\r\n              {genres.map((genre) => (\r\n                <span style={{ paddingRight: 10 }} key={genre.id}>\r\n                  {genre.name}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className={styles.additional_information}>\r\n            <p>Additional information</p>\r\n            <ul>\r\n              <li>\r\n                <Link to={{ pathname: `${url}/cast`, state: location.state }}>\r\n                  Cast\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  to={{ pathname: `${url}/reviews`, state: location.state }}\r\n                >\r\n                  Reviews\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <Route path=\"/movies/:id/cast\" component={Cast} />\r\n          <Route path=\"/movies/:id/reviews\" component={Reviews} />\r\n        </>\r\n      ) : (\r\n        <div>Loading</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetailsPage;\r\n"],"sourceRoot":""}